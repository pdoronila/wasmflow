"""
{{COMPONENT_NAME}} - User-Defined WasmFlow Component

{{DESCRIPTION}}
Generated by WASM Component Creator
"""

from dataclasses import dataclass
from typing import Optional, Union

# Define types matching WIT interface
@dataclass
class ComponentInfo:
    name: str
    version: str
    description: str
    author: str
    category: Optional[str]

# DataType variant - each variant is an empty class
class U32Type:
    pass

class I32Type:
    pass

class F32Type:
    pass

class StringType:
    pass

class BinaryType:
    pass

class ListType:
    pass

class AnyType:
    pass

DataType = Union[U32Type, I32Type, F32Type, StringType, BinaryType, ListType, AnyType]

@dataclass
class PortSpec:
    name: str
    data_type: DataType
    optional: bool
    description: str

# Value variant - for inputs/outputs
@dataclass
class U32Val:
    value: int

@dataclass
class I32Val:
    value: int

@dataclass
class F32Val:
    value: float

@dataclass
class StringVal:
    value: str

@dataclass
class BinaryVal:
    value: bytes

Value = Union[U32Val, I32Val, F32Val, StringVal, BinaryVal]

class Metadata:
    """Metadata interface implementation"""

    @staticmethod
    def get_info():
        return ComponentInfo(
            name="{{COMPONENT_NAME}}",
            version="0.1.0",
            description="{{DESCRIPTION}}",
            author="User",
            category="{{CATEGORY}}"
        )

    @staticmethod
    def get_inputs():
        return [{{INPUTS}}]

    @staticmethod
    def get_outputs():
        return [{{OUTPUTS}}]

    @staticmethod
    def get_capabilities():
        {{CAPABILITIES_PYTHON}}

class Execution:
    """Execution interface implementation"""

    @staticmethod
    def execute(inputs):
        # Note: host.log would need to be properly bound
        # For now, just execute the user code

        {{INPUT_EXTRACTION_PYTHON}}

        # User code begins here
        {{USER_CODE}}
        # User code ends here

        {{OUTPUT_CONSTRUCTION_PYTHON}}
